// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.simulator";
option java_outer_classname = "SimulatorProto";
option objc_class_prefix = "SIM";

import "google/protobuf/empty.proto";
package simulator;

// Interface exported by the server.
service SimulatorServer {

  rpc Step(google.protobuf.Empty) returns (State) {}

  rpc GetState(google.protobuf.Empty) returns (State) {}
  rpc GetNVEState(google.protobuf.Empty) returns (NVEState) {}
  rpc GetAgentState(google.protobuf.Empty) returns (AgentState) {}
  rpc GetObjectState(google.protobuf.Empty) returns (ObjectState) {}
  rpc SetState(StateChange) returns (google.protobuf.Empty) {}

  rpc IsStarted(google.protobuf.Empty) returns (IsStartedState) {}

  rpc Start(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc Stop(google.protobuf.Empty) returns (google.protobuf.Empty) {}

}

message AgentIdx {
  repeated int32 idx = 1;
}

message NDArray {
  bytes ndarray = 1;
}

message RigidBody {
  NDArray center = 1;
  NDArray orientation = 2;
}

message SimulatorState {
  NDArray idx = 1;
  NDArray box_size = 2;
  NDArray n_agents = 3;
  NDArray n_objects = 4;
  NDArray num_steps_lax = 5;
  NDArray dt = 6;
  NDArray freq = 7;
  NDArray neighbor_radius = 8;
  NDArray to_jit = 9;
  NDArray use_fori_loop = 10;
}

message NVEState {
  RigidBody position = 1;
  RigidBody momentum = 2;
  RigidBody force = 3;
  RigidBody mass = 4;
  NDArray diameter = 5;
  NDArray entity_type = 6;
  NDArray entity_idx = 7;
  NDArray friction = 8;
  NDArray exists = 9;
}

message AgentState {
  NDArray nve_idx = 1;
  NDArray prox = 2;
  NDArray motor = 3;
  NDArray behavior = 4;
  NDArray wheel_diameter = 5;
  NDArray speed_mul = 6;
  NDArray theta_mul = 7;
  NDArray proxs_dist_max = 8;
  NDArray proxs_cos_min = 9;
  NDArray color = 10;
  NDArray neighbor_map_dist = 11;
  NDArray neighbor_map_theta = 12;
}

message ObjectState {
  NDArray nve_idx = 1;
  NDArray custom_field = 2;
  NDArray color = 3;
}

message State {
  SimulatorState simulator_state = 1;
  NVEState nve_state = 2;
  AgentState agent_state = 3;
  ObjectState object_state = 4;
}

message StateChange {
  repeated int32 nve_idx= 1;
  repeated int32 col_idx= 2;
  repeated string nested_field = 3;
  NDArray value = 4;
}

message AddAgentInput {
  int32 n_agents = 1;
  string serialized_config =2;
}

message IsStartedState {
  bool is_started = 1;
}
