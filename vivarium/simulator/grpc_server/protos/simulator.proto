// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.simulator";
option java_outer_classname = "SimulatorProto";
option objc_class_prefix = "SIM";

import "google/protobuf/empty.proto";
package simulator;

// Interface exported by the server.
service SimulatorServer {

  rpc GetSimulationConfigMessage(google.protobuf.Empty) returns (SimulationConfig) {}
  rpc GetSimulationConfigSerialized(google.protobuf.Empty) returns (SimulationConfigSerialized) {}
  rpc GetRecordedChanges(Name) returns (SerializedDict) {}

  rpc GetAllConfigSerialized(google.protobuf.Empty) returns (AllConfigSerialized) {}
  rpc GetAgentConfigMessage(google.protobuf.Empty) returns (AgentConfig) {}
  rpc GetAgentConfigSerialized(AgentIdx) returns (AgentConfigSerialized) {}
  rpc GetAgentConfigsSerialized(google.protobuf.Empty) returns (AgentConfigsSerialized) {}
  rpc GetAgentConfigs(google.protobuf.Empty) returns (AgentConfigs) {}
  rpc GetAgentConfig(AgentIdx) returns (AgentConfig) {}

  rpc SensoryMotorStream(stream Motor) returns (stream Prox) {}

  rpc NVEStateStream (google.protobuf.Empty) returns (stream NVEState) {}
  rpc StopNVEStream (google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc StartBehavior(Behavior) returns (google.protobuf.Empty) {}

  rpc AgentStep(Motor) returns (Prox) {}

  rpc Step(google.protobuf.Empty) returns (State) {}

  rpc SetSimulationConfigSerialized(SimulationConfigSerialized) returns (google.protobuf.Empty) {}
  rpc SetSimulationConfig(SerializedDictSenderName) returns (google.protobuf.Empty) {}

  rpc SetAgentConfig(SerializedDictIdxSenderName) returns (AgentConfig) {}

  rpc SetMotors(MotorInfo) returns (google.protobuf.Empty) {}

  rpc GetState(google.protobuf.Empty) returns (State) {}
  rpc GetNVEState(google.protobuf.Empty) returns (NVEState) {}
  rpc GetAgentState(google.protobuf.Empty) returns (AgentState) {}
  rpc GetObjectState(google.protobuf.Empty) returns (ObjectState) {}
  rpc SetState(StateChange) returns (google.protobuf.Empty) {}

  rpc AddAgents(AddAgentInput) returns (AgentIdx) {}
  rpc RemoveAgents(AgentIdx) returns (google.protobuf.Empty) {}

  rpc IsStarted(google.protobuf.Empty) returns (IsStartedState) {}

  rpc Start(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc Stop(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc GetChangeTime(google.protobuf.Empty) returns (Time) {}

}

message Name {
  string name = 1;
}

message Time {
  int32 time = 1;
}

message Slice {
  int32 start = 1;
  int32 stop = 2;
  int32 step = 3;
}

message SerializedDict {
  string serialized = 1;
//  bool has_entity_behaviors = 2;
//  NDArray entity_behaviors = 3;
}

message SimulationConfig {
  float box_size = 1;
  int32 map_dim = 2;
  int32 n_agents = 3;
  int32 num_steps_lax = 4;
  int32 num_lax_loops = 5;
  float dt = 6;
  float freq = 7;
  float neighbor_radius = 8;
  bool to_jit = 9;
  bool use_fori_loop = 10;
}

message SimulationConfigSenderName {
  SimulationConfig config = 1;
  Name name = 2;
}

message SimulationConfigSerialized {
  string serialized = 1;
}

message AgentIdx {
  repeated int32 idx = 1;
}

message AgentConfig {
    float wheel_diameter = 1;
    float base_length = 2;
    float speed_mul = 3;
    float theta_mul = 4;
    float proxs_dist_max = 6;
    float proxs_cos_min = 7;
    string behavior = 8;
    string color = 9;
    int32 entity_type = 10;
}

message AgentConfigIdxSenderName {
  AgentConfig config = 1;
  Name name = 2;
  AgentIdx idx = 3;
}

message SerializedDictSenderName {
  SerializedDict dict = 1;
  Name name = 2;
}

message SerializedDictIdxSenderName {
  SerializedDict dict = 1;
  Name name = 2;
  AgentIdx idx = 3;
}

message AgentConfigs {
  repeated AgentConfig agent_configs = 1;
}

message AllConfigSerialized {
  string simulation_config = 1;
  string agent_configs = 2;
  string object_configs = 3;
}

message AgentConfigSerialized {
  string serialized = 1;
}

message AgentConfigsSerialized {
  repeated string serialized = 1;
}

message NDArray {
  bytes ndarray = 1;
}

message RigidBody {
  NDArray center = 1;
  NDArray orientation = 2;
}

message NVEState {
  RigidBody position = 1;
  RigidBody momentum = 2;
  RigidBody force = 3;
  RigidBody mass = 4;
  NDArray diameter = 5;
  NDArray entity_type = 6;
  NDArray entity_idx = 7;
  NDArray friction = 8;
}

message AgentState {
  NDArray nve_idx = 1;
  NDArray prox = 2;
  NDArray motor = 3;
  NDArray behavior = 4;
  NDArray wheel_diameter = 5;
  NDArray speed_mul = 6;
  NDArray theta_mul = 7;
  NDArray proxs_dist_max = 8;
  NDArray proxs_cos_min = 9;
  NDArray color = 10;
}

message ObjectState {
  NDArray nve_idx = 1;
  NDArray custom_field = 2;
  NDArray color = 3;
}

message State {
  NVEState nve_state = 1;
  AgentState agent_state = 2;
  ObjectState object_state = 3;
}

message MotorInfo {
  AgentIdx agent_idx = 1;
  int32 motor_idx = 2;
  float value = 3;
}

message Motor {
  int32 agent_idx = 1;
  repeated float motor = 2;
}

message Prox {
  int32 agent_idx = 1;
  repeated float prox = 2;
}


message Behavior {
  int32 agent_idx = 1;
  bytes function =2;
}

message StateChange {
  repeated int32 nve_idx= 1;
  repeated int32 col_idx= 2;
  repeated string nested_field = 3;
  NDArray value = 4;
}

message AddAgentInput {
  int32 n_agents = 1;
  string serialized_config =2;
}

message IsStartedState {
  bool is_started = 1;
}
