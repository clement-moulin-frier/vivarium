// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.simulator";
option java_outer_classname = "SimulatorProto";
option objc_class_prefix = "SIM";

import "google/protobuf/empty.proto";
//import "ndarray.proto";
package simulator;

// Interface exported by the server.
service SimulatorServer {

  rpc GetSimulationConfigMessage(google.protobuf.Empty) returns (SimulationConfig) {}
  rpc GetSimulationConfigSerialized(google.protobuf.Empty) returns (SimulationConfigSerialized) {}
  rpc GetRecordedChanges(Name) returns (SerializedDict) {}

  rpc GetAgentConfigMessage(google.protobuf.Empty) returns (AgentConfig) {}
  rpc GetAgentConfigSerialized(AgentIdx) returns (AgentConfigSerialized) {}
  rpc GetAgentConfigs(google.protobuf.Empty) returns (AgentConfigs) {}
  rpc GetAgentConfig(AgentIdx) returns (AgentConfig) {}

  rpc GetPopulationConfigMessage(google.protobuf.Empty) returns (PopulationConfig) {}
  rpc GetPopulationConfigSerialized(google.protobuf.Empty) returns (PopulationConfigSerialized) {}

  rpc SetSimulationConfigSerialized(SimulationConfigSerialized) returns (google.protobuf.Empty) {}
  rpc SetSimulationConfig(SimulationConfigSenderName) returns (google.protobuf.Empty) {}

  rpc SetAgentConfig(AgentConfigIdxSenderName) returns (AgentConfig) {}

  rpc SetMotors(Motors) returns (google.protobuf.Empty) {}
  rpc SetBehaviors(Behaviors) returns (google.protobuf.Empty) {}

  rpc SetPopulationConfig(PopulationConfig) returns (google.protobuf.Empty) {}
  rpc SetPopulationConfigSerialized(PopulationConfigSerialized) returns (google.protobuf.Empty) {}

  rpc GetStateMessage(google.protobuf.Empty) returns (State) {}

  rpc GetStateArrays(google.protobuf.Empty) returns (StateArrays) {}

  rpc GetNVEState(google.protobuf.Empty) returns (NVEState) {}

  rpc IsStarted(google.protobuf.Empty) returns (IsStartedState) {}

  rpc Start(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc Stop(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc UpdateNeighborFn(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc UpdateStateNeighbors(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc UpdateFunctionUpdate(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc UpdateBehaviors(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc GetChangeTime(google.protobuf.Empty) returns (Time) {}

}

message Name {
  string name = 1;
}

message Time {
  int32 time = 1;
}

message Slice {
  int32 start = 1;
  int32 stop = 2;
  int32 step = 3;
}

message Motors {
  Slice agent_slice = 1;
  NDArray motors = 2;
}

message Behaviors {
  Slice agent_slice = 1;
  string behavior = 2;
}

message SimulationConfig {
  float box_size = 1;
  int32 map_dim = 2;
  int32 num_steps_lax = 3;
  int32 num_lax_loops = 4;
  float dt = 5;
  float freq = 6;
  float neighbor_radius = 7;
  bool to_jit = 8;
  bool use_fori_loop = 9;
}

message SimulationConfigWithOneOf {
  oneof box_size {
    bool has_box_size = 1;
    float box_size_value = 2;
  }
  oneof map_dim {
    bool has_map_dim = 3;
    int32 map_dim_value = 4;
  }
  oneof num_steps_lax {
    bool has_num_steps_lax = 5;
    int32 num_steps_lax_value = 6;
  }
  oneof num_lax_loops {
    bool has_num_lax_loops = 7;
    int32 num_lax_loops_value = 8;
  }
  oneof dt {
    bool has_dt = 9;
    float dt_value = 10;
  }
  oneof freq {
    bool has_freq = 11;
    float freq_value = 12;
  }
  oneof neighbor_radius {
    bool has_neighbor_radius = 13;
    float neighbor_radius_value = 14;
  }
  oneof to_jit {
    bool has_to_jit = 15;
    bool to_jit_value = 16;
  }
  oneof use_fori_loop {
    bool has_use_fori_loop = 17;
    bool use_fori_loop_value = 18;
  }
}

message SimulationConfigSenderName {
  SimulationConfig config = 1;
  Name name = 2;
}

message SimulationConfigSerialized {
  string serialized = 1;
}

message SerializedDict {
  string serialized_dict = 1;
  bool has_entity_behaviors = 2;
  NDArray entity_behaviors = 3;
}

message AgentIdx {
  int32 idx = 1;
}

message AgentConfig {
    float wheel_diameter = 1;
    float base_length = 2;
    float speed_mul = 3;
    float theta_mul = 4;
    float proxs_dist_max = 6;
    float proxs_cos_min = 7;
    string behavior = 8;
    int32 entity_type = 9;
}

message AgentConfigIdxSenderName {
  AgentConfig config = 1;
  Name name = 2;
  AgentIdx idx = 3;
}

message AgentConfigs {
  repeated AgentConfig agent_configs = 1;
}

message AgentConfigSerialized {
  string serialized = 1;
}

message PopulationConfig {
  int32 n_agents = 1;
}

message PopulationConfigSerialized {
  string serialized = 1;
}

message Position {
  repeated float x = 1;
  repeated float y = 2;
}

message State {
  Position positions = 1;
  repeated float thetas = 2;
}

message NDArray {
  bytes ndarray = 1;
}

message StateArrays {
  NDArray positions = 1;
  NDArray thetas = 2;
  NDArray proxs = 3;
  NDArray motors = 4;
  int32 entity_type = 5;
}

message RigidBody {
  NDArray center = 1;
  NDArray orientation = 2;
}

message NVEState {
  RigidBody position = 1;
  RigidBody momentum = 2;
  RigidBody force = 3;
  RigidBody mass = 4;
  NDArray prox = 5;
  NDArray motor = 6;
  NDArray behavior = 7;
  NDArray wheel_diameter = 8;
  NDArray base_length = 9;
  NDArray speed_mul = 10;
  NDArray theta_mul = 11;
  NDArray proxs_dist_max = 12;
  NDArray proxs_cos_min = 13;
  NDArray entity_type = 14;
}

message IsStartedState {
  bool is_started = 1;
}
